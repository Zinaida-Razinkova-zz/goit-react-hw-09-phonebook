{"version":3,"sources":["App.module.css","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","components/ContactForm/ContactForm.module.css","components/Filter/Filter.module.css","components/ContactList/ContactList.module.css","components/RegisterForm.js","components/LoginForm.js","redux/operations.js","components/ContactForm/ContactForm.js","redux/selectors.js","components/Filter/Filter.js","components/ContactList/ContactList.js","views/ContactsView.js","views/Phonebook.jpg","views/HomeView.js"],"names":["module","exports","_slicedToArray","arr","i","Array","isArray","Symbol","iterator","Object","_arr","_n","_d","_e","undefined","_s","_i","next","done","push","value","length","err","unsupportedIterableToArray","TypeError","RegisterView","dispatch","useDispatch","useState","name","setName","email","setEmail","password","setPassword","handleChange","useCallback","event","currentTarget","handleSubmit","e","preventDefault","authOperations","register","reset","className","styles","createFormAccount","createFormHeading","createForm","onSubmit","autoComplete","createFormLabel","createFormText","type","onChange","buttonCreateBlock","buttonCreateAccount","LoginView","console","warn","logIn","loginFormPhonebook","loginFormHeading","loginForm","LoginFormLabel","LoginFormText","buttonLoginBlock","buttonLoginForm","number","contact","actions","addContactRequest","axios","post","then","data","addContactSuccess","catch","error","addContactError","message","contactId","deleteContactRequest","delete","deleteContactSuccess","deleteContactError","ContactForm","setNumber","handlChange","handlSubmit","operations","formConteiner","labelName","htmlFor","spanText","inputName","pattern","title","required","buttonAddContact","getFilter","state","contacts","filter","getAllContacts","items","getVisibleContacts","createSelector","normalizedFilter","toLowerCase","includes","Filter","useSelector","selectors","changeFilter","inputFilter","ContactList","listContactList","map","listStyle","buttonContactList","onClick","id","ContactsView","appConteiner","text","HomeView","homeBlock","texthome","img","src","Phonebook","alt","width"],"mappings":"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","file":"static/js/home-page.39ce3c7a.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"appConteiner\":\"App_appConteiner__xQEE8\",\"text\":\"App_text__tz62f\",\"texthome\":\"App_texthome__a5Fv2\",\"buttonLoginForm\":\"App_buttonLoginForm__14swO\",\"buttonCreateAccount\":\"App_buttonCreateAccount__3dJ0f\",\"loginForm\":\"App_loginForm__1dV1F\",\"createForm\":\"App_createForm__3qDiy\",\"LoginFormLabel\":\"App_LoginFormLabel__2cbEJ\",\"createFormLabel\":\"App_createFormLabel__1SBQv\",\"LoginFormText\":\"App_LoginFormText__1j35C\",\"createFormText\":\"App_createFormText__3AMs_\",\"buttonLoginBlock\":\"App_buttonLoginBlock__2C71S\",\"loginFormPhonebook\":\"App_loginFormPhonebook__2BFsX\",\"createFormAccount\":\"App_createFormAccount__1QZzB\",\"loginFormHeading\":\"App_loginFormHeading__3aI6e\",\"createFormHeading\":\"App_createFormHeading__3FuS7\",\"homeBlock\":\"App_homeBlock__Hn7SD\"};","import arrayWithHoles from \"@babel/runtime/helpers/esm/arrayWithHoles\";\nimport iterableToArrayLimit from \"@babel/runtime/helpers/esm/iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableRest from \"@babel/runtime/helpers/esm/nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"labelName\":\"ContactForm_labelName__oTzMK\",\"inputName\":\"ContactForm_inputName__1tgpg\",\"spanText\":\"ContactForm_spanText__1vZNj\",\"buttonAddContact\":\"ContactForm_buttonAddContact__Lw1cb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"inputFilter\":\"Filter_inputFilter__2Qv4k\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"listContactList\":\"ContactList_listContactList__NaMhp\",\"listStyle\":\"ContactList_listStyle__12wIn\",\"buttonContactList\":\"ContactList_buttonContactList__1FHii\"};","import React, { useState, useCallback } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport styles from \"../App.module.css\";\r\nimport { authOperations } from \"../redux/auth\";\r\n\r\nexport default function RegisterView() {\r\n  const dispatch = useDispatch();\r\n\r\n  const [name, setName] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n\r\n  const handleChange = useCallback((event) => {\r\n    const { name, value } = event.currentTarget;\r\n\r\n    switch (name) {\r\n      case \"name\":\r\n        return setName(value);\r\n\r\n      case \"email\":\r\n        return setEmail(value);\r\n\r\n      case \"password\":\r\n        return setPassword(value);\r\n\r\n      default:\r\n        return null;\r\n    }\r\n  }, []);\r\n\r\n  const handleSubmit = useCallback(\r\n    (e) => {\r\n      e.preventDefault();\r\n      dispatch(authOperations.register({ name, email, password }));\r\n      reset();\r\n    },\r\n    [dispatch, name, email, password]\r\n  );\r\n\r\n  const reset = () => {\r\n    setName(\"\");\r\n    setEmail(\"\");\r\n    setPassword(\"\");\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div className={styles.createFormAccount}>\r\n        <h1 className={styles.createFormHeading}>Create your account</h1>\r\n      </div>\r\n      <form\r\n        className={styles.createForm}\r\n        onSubmit={handleSubmit}\r\n        autoComplete=\"off\"\r\n      >\r\n        <label className={styles.createFormLabel}>\r\n          <span className={styles.createFormText}>Name</span>\r\n          <input type=\"text\" name=\"name\" value={name} onChange={handleChange} />\r\n        </label>\r\n\r\n        <label className={styles.createFormLabel}>\r\n          <span className={styles.createFormText}>Email</span>\r\n          <input\r\n            type=\"text\"\r\n            name=\"email\"\r\n            value={email}\r\n            onChange={handleChange}\r\n          />\r\n        </label>\r\n\r\n        <label className={styles.createFormLabel}>\r\n          <span className={styles.createFormText}>Password</span>\r\n          <input\r\n            type=\"password\"\r\n            name=\"password\"\r\n            value={password}\r\n            onChange={handleChange}\r\n          />\r\n        </label>\r\n        <div className={styles.buttonCreateBlock}>\r\n          <button className={styles.buttonCreateAccount} type=\"submit\">\r\n            Create account\r\n          </button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState, useCallback } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { authOperations } from \"../redux/auth\";\r\nimport styles from \"../App.module.css\";\r\n\r\nexport default function LoginView() {\r\n  const dispatch = useDispatch();\r\n\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n\r\n  const handleChange = useCallback((e) => {\r\n    const { name, value } = e.currentTarget;\r\n\r\n    switch (name) {\r\n      case \"email\":\r\n        return setEmail(value);\r\n\r\n      case \"password\":\r\n        return setPassword(value);\r\n\r\n      default:\r\n        return console.warn(`Error`);\r\n    }\r\n  }, []);\r\n\r\n  const handleSubmit = useCallback(\r\n    (e) => {\r\n      e.preventDefault();\r\n      dispatch(authOperations.logIn({ email, password }));\r\n      reset();\r\n    },\r\n    [dispatch, email, password]\r\n  );\r\n\r\n  const reset = () => {\r\n    setEmail(\"\");\r\n    setPassword(\"\");\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div className={styles.loginFormPhonebook}>\r\n        <h1 className={styles.loginFormHeading}>Log in to Phonebook</h1>\r\n      </div>\r\n      <form\r\n        className={styles.loginForm}\r\n        onSubmit={handleSubmit}\r\n        autoComplete=\"off\"\r\n      >\r\n        <label className={styles.LoginFormLabel}>\r\n          <span className={styles.LoginFormText}>Email</span>\r\n          <input\r\n            type=\"email\"\r\n            name=\"email\"\r\n            value={email}\r\n            onChange={handleChange}\r\n          />\r\n        </label>\r\n\r\n        <label className={styles.LoginFormLabel}>\r\n          <span className={styles.LoginFormText}>Password</span>\r\n          <input\r\n            type=\"password\"\r\n            name=\"password\"\r\n            value={password}\r\n            onChange={handleChange}\r\n          />\r\n        </label>\r\n        <div className={styles.buttonLoginBlock}>\r\n          <button className={styles.buttonLoginForm} type=\"submit\">\r\n            Log in\r\n          </button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n","import axios from \"axios\";\r\nimport actions from \"./actions\";\r\n\r\nconst fetchContact = () => (dispatch) => {\r\n  dispatch(actions.fetchContactRequest());\r\n\r\n  axios\r\n    .get(\"/contacts\")\r\n    .then(({ data }) => dispatch(actions.fetchContactSuccess(data)))\r\n    .catch((error) => dispatch(actions.fetchContactError(error.message)));\r\n};\r\nconst addContact = ({ name, number }) => (dispatch) => {\r\n  const contact = { name, number };\r\n\r\n  dispatch(actions.addContactRequest());\r\n\r\n  axios\r\n    .post(\"/contacts\", contact)\r\n    .then(({ data }) => dispatch(actions.addContactSuccess(data)))\r\n    .catch((error) => dispatch(actions.addContactError(error.message)));\r\n};\r\n\r\nconst deleteContact = (contactId) => (dispatch) => {\r\n  dispatch(actions.deleteContactRequest());\r\n\r\n  axios\r\n    .delete(`/contacts/${contactId}`)\r\n    .then(() => dispatch(actions.deleteContactSuccess(contactId)))\r\n    .catch((error) => dispatch(actions.deleteContactError(error.message)));\r\n};\r\n\r\n// eslint-disable-next-line\r\nexport default { addContact, deleteContact, fetchContact };\r\n","import React, { useState, useCallback } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport styles from \"./ContactForm.module.css\";\r\nimport operations from \"../../redux/operations\";\r\n\r\nexport default function ContactForm() {\r\n  const [name, setName] = useState(\"\");\r\n  const [number, setNumber] = useState(\"\");\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const handlChange = useCallback((event) => {\r\n    const { name, value } = event.currentTarget;\r\n    switch (name) {\r\n      case \"name\":\r\n        return setName(value);\r\n\r\n      case \"number\":\r\n        return setNumber(value);\r\n\r\n      default:\r\n        return null;\r\n    }\r\n  }, []);\r\n\r\n  const handlSubmit = useCallback(\r\n    (event) => {\r\n      event.preventDefault();\r\n      // formSubmitHandler  v\r\n      dispatch(operations.addContact({ name, number }));\r\n      reset();\r\n    },\r\n    [dispatch, name, number]\r\n  );\r\n\r\n  const reset = () => {\r\n    setName(\"\");\r\n    setNumber(\"\");\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <form className={styles.formConteiner} onSubmit={handlSubmit}>\r\n        <label className={styles.labelName} htmlFor=\"\">\r\n          <span className={styles.spanText}>Name</span>\r\n          <input\r\n            className={styles.inputName}\r\n            onChange={handlChange}\r\n            value={name}\r\n            type=\"text\"\r\n            name=\"name\"\r\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n            required\r\n          />\r\n        </label>\r\n        <label className={styles.labelName} htmlFor=\"\">\r\n          <span className={styles.spanText}>Number</span>\r\n          <input\r\n            className={styles.inputName}\r\n            onChange={handlChange}\r\n            value={number}\r\n            type=\"tel\"\r\n            name=\"number\"\r\n            pattern=\"(\\+?( |-|\\.)?\\d{1,2}( |-|\\.)?)?(\\(?\\d{3}\\)?|\\d{3})( |-|\\.)?(\\d{3}( |-|\\.)?\\d{4})\"\r\n            title=\"Номер телефона должен состоять из 11-12 цифр и может содержать цифры, пробелы, тире, пузатые скобки и может начинаться с +\"\r\n            required\r\n          />\r\n        </label>\r\n        <button className={styles.buttonAddContact} type=\"submit\">\r\n          Add contact\r\n        </button>\r\n      </form>\r\n    </>\r\n  );\r\n}\r\n","import { createSelector } from \"@reduxjs/toolkit\";\r\n\r\nconst getFilter = (state) => state.contacts.filter;\r\n\r\nconst getAllContacts = (state) => state.contacts.items;\r\n\r\nconst getVisibleContacts = createSelector(\r\n  [getAllContacts, getFilter],\r\n  (items, filter) => {\r\n    const normalizedFilter = filter.toLowerCase();\r\n\r\n    return items.filter(({ name }) =>\r\n      name.toLowerCase().includes(normalizedFilter)\r\n    );\r\n  }\r\n);\r\n\r\n// eslint-disable-next-line\r\nexport default {\r\n  getFilter,\r\n  getAllContacts,\r\n  getVisibleContacts,\r\n};\r\n","import React, { useCallback } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport styles from \"./Filter.module.css\";\r\nimport actions from \"../../redux/actions\";\r\nimport { useSelector } from \"react-redux\";\r\nimport selectors from \"../../redux/selectors\";\r\n\r\n// const mapStateToProps = (state) => ({\r\n//   value: selectors.getFilter(state),\r\n// });\r\n\r\n// const mapDispatchToProps = (dispatch) => ({\r\n//   onChange: (event) => dispatch(actions.changeFilter(event.target.value)),\r\n// });\r\n\r\nexport default function Filter() {\r\n  const value = useSelector(selectors.getFilter);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const onChange = useCallback(\r\n    (event) => {\r\n      dispatch(actions.changeFilter(event.currentTarget.value));\r\n    },\r\n    [dispatch]\r\n  );\r\n\r\n  return (\r\n    <>\r\n      <label>\r\n        <span>Find contacts by name</span>\r\n        <input\r\n          className={styles.inputFilter}\r\n          type=\"text\"\r\n          value={value}\r\n          onChange={onChange}\r\n        />\r\n      </label>\r\n    </>\r\n  );\r\n}\r\n","// import React, { useCallback } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport styles from \"./ContactList.module.css\";\r\nimport operations from \"../../redux/operations\";\r\nimport selectors from \"../../redux/selectors\";\r\n\r\n// const mapStateToProps = (state) => ({\r\n//   contacts: selectors.getVisibleContacts(state),\r\n// });\r\n\r\n// const mapDispatchToProps = (dispatch) => ({\r\n//   onDeleteButton: (id) => dispatch(operations.deleteContact(id)),\r\n// });\r\n\r\nexport default function ContactList() {\r\n  const contacts = useSelector(selectors.getVisibleContacts);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  return (\r\n    <>\r\n      <ul className={styles.listContactList}>\r\n        {contacts.map((contact) => (\r\n          <li className={styles.listStyle} key={contact.id}>\r\n            {contact.name + \" : \" + contact.number}\r\n            <button\r\n              className={styles.buttonContactList}\r\n              onClick={() => {\r\n                dispatch(operations.deleteContact(contact.id));\r\n              }}\r\n            >\r\n              Delete\r\n            </button>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </>\r\n  );\r\n}\r\n","import ContactForm from \"../components/ContactForm/ContactForm\";\r\nimport Filter from \"../components/Filter/Filter\";\r\nimport ContactList from \"../components/ContactList/ContactList\";\r\nimport styles from \"../App.module.css\";\r\n\r\nexport default function ContactsView() {\r\n  return (\r\n    <div className={styles.appConteiner}>\r\n      <h1 className={styles.text}>Phonebook</h1>\r\n      <ContactForm />\r\n      <h2 className={styles.text}>Contacts</h2>\r\n      <Filter />\r\n      <ContactList />\r\n    </div>\r\n  );\r\n}\r\n","export default __webpack_public_path__ + \"static/media/Phonebook.007518a8.jpg\";","import React from \"react\";\r\nimport styles from \"../App.module.css\";\r\nimport Phonebook from \"../views/Phonebook.jpg\";\r\n\r\nexport default function HomeView() {\r\n  return (\r\n    <div>\r\n      <section className={styles.homeBlock}>\r\n        <h1 className={styles.texthome}>Phonebook</h1>\r\n        <img\r\n          className={styles.img}\r\n          src={Phonebook}\r\n          alt=\"Phonebook\"\r\n          width=\"150\"\r\n        />\r\n        <p className={styles.texthome}>\r\n          The long awaited app is available! Phonebook allows you to completely\r\n          replace standard phone and contact manager. Phonebook makes access to\r\n          call history, contacts, groups and favorites is incredibly simple and\r\n          pleasant. The controls are designed so that all actions can be do it\r\n          with one hand - you don't have to reach the top of the screen, it will\r\n          become more convenient to use the phone. The phonebook supports T9 and\r\n          is easy customizable! Phonebook works faster and better than all\r\n          existing ones analogs, and also offers a completely new way of\r\n          managing contacts - viewing and editing a contact occurs in one place,\r\n          without opening new windows.\r\n        </p>\r\n      </section>\r\n    </div>\r\n  );\r\n}\r\n"],"sourceRoot":""}