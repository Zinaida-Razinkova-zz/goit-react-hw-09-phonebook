{"version":3,"sources":["components/UserMenu/UserMenu.module.css","redux/auth/index.js","redux/auth/auth-selectors.js","redux/actions.js","redux/auth/auth-actions.js","redux/auth/auth-reducer.js","redux/auth/auth-operations.js","components/UserMenu/Navigation.js","components/UserMenu/UserMenu.js","components/UserMenu/AuthNav.js","components/UserMenu/AppBar.js","components/PrivateRoute.js","components/PublicRoute.js","App.js","redux/reducer.js","redux/store.js","index.js"],"names":["module","exports","getIsAuthenticated","state","auth","isAuthenticated","getUsername","user","name","fetchContactRequest","createAction","fetchContactSuccess","fetchContactError","addContactRequest","addContactSuccess","addContactError","deleteContactRequest","deleteContactSuccess","deleteContactError","changeFilter","registerRequest","registerSuccess","registerError","loginRequest","loginSuccess","loginError","logoutRequest","logoutSuccess","logoutError","getCurrentUserRequest","getCurrentUserSuccess","getCurrentUserError","initialUserState","email","createReducer","authActions","_","payload","token","setError","error","combineReducers","axios","defaults","baseURL","headers","common","Authorization","register","credentials","dispatch","a","post","response","data","message","logOut","logIn","getCurrentUser","getState","persistedToken","get","Navigation","isLoggedIn","useSelector","authSelectors","to","exact","className","styles","navlink","UserMenu","useDispatch","onLogout","useCallback","authOperations","userMenuBlock","welcomeText","buttonLogOut","type","onClick","AuthNav","AppBar","AppBarHeader","PrivateRoute","children","redirectTo","routeProps","PublicRoute","component","restricted","HomeView","lazy","RegisterView","LoginView","ContactsView","App","useEffect","fallback","path","items","actions","action","filter","contact","id","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","logger","authPersistConfig","key","storage","whitelist","store","configureStore","reducer","persistReducer","aythReducer","contacts","contactReducer","devTools","process","persistor","persistStore","ReactDOM","render","StrictMode","loading","document","getElementById"],"mappings":"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","file":"static/js/main.d325b024.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"AppBarHeader\":\"UserMenu_AppBarHeader__1v0gs\",\"navlink\":\"UserMenu_navlink__BaexR\",\"buttonLogOut\":\"UserMenu_buttonLogOut__nY7Nm\",\"imgUser\":\"UserMenu_imgUser__moYkY\",\"welcomeText\":\"UserMenu_welcomeText__16kfG\"};","export { default as authActions } from './auth-actions';\r\nexport { default as authReducer } from './auth-reducer';\r\nexport { default as authOperations } from './auth-operations';\r\nexport { default as authSelectors } from './auth-selectors';","const getIsAuthenticated = (state) => state.auth.isAuthenticated;\r\n\r\nconst getUsername = (state) => state.auth.user.name;\r\n\r\n// eslint-disable-next-line\r\nexport default {\r\n  getIsAuthenticated,\r\n  getUsername,\r\n};\r\n","import { createAction } from \"@reduxjs/toolkit\";\r\n\r\nconst fetchContactRequest = createAction(\"contacts/fetchContactRequest\");\r\nconst fetchContactSuccess = createAction(\"contacts/fetchContactSuccess\");\r\nconst fetchContactError = createAction(\"contacts/fetchContactError\");\r\n\r\nconst addContactRequest = createAction(\"contacts/addContactRequest\");\r\nconst addContactSuccess = createAction(\"contacts/addContactSuccess\");\r\nconst addContactError = createAction(\"contacts/addContactError\");\r\n\r\nconst deleteContactRequest = createAction(\"contacts/deleteContactRequest\");\r\nconst deleteContactSuccess = createAction(\"contacts/deleteContactSuccess\");\r\nconst deleteContactError = createAction(\"contacts/deleteContactError\");\r\n\r\nconst changeFilter = createAction(\"contacts/changeFilter\");\r\n\r\n// eslint-disable-next-line\r\nexport default {\r\n  fetchContactRequest,\r\n  fetchContactSuccess,\r\n  fetchContactError,\r\n\r\n  addContactRequest,\r\n  addContactSuccess,\r\n  addContactError,\r\n\r\n  deleteContactRequest,\r\n  deleteContactSuccess,\r\n  deleteContactError,\r\n\r\n  changeFilter,\r\n};\r\n","import { createAction } from '@reduxjs/toolkit';\r\n// регистрация\r\nconst registerRequest = createAction('auth/registerRequest');\r\nconst registerSuccess = createAction('auth/registerSuccess');\r\nconst registerError = createAction('auth/registerError');\r\n\r\n// логин\r\nconst loginRequest = createAction('auth/loginRequest');\r\nconst loginSuccess = createAction('auth/loginSuccess');\r\nconst loginError = createAction('auth/loginError');\r\n\r\n// логаут(разлогиниться)\r\nconst logoutRequest = createAction('auth/logoutRequest');\r\nconst logoutSuccess = createAction('auth/logoutSuccess');\r\nconst logoutError = createAction('auth/logoutError');\r\n\r\n// получить текущего -  рефреш\r\nconst getCurrentUserRequest = createAction('auth/getCurrentUserRequest');\r\nconst getCurrentUserSuccess = createAction('auth/getCurrentUserSuccess');\r\nconst getCurrentUserError = createAction('auth/getCurrentUserError');\r\n\r\nexport default {\r\n  registerRequest,\r\n  registerSuccess,\r\n  registerError,\r\n  logoutRequest,\r\n  logoutSuccess,\r\n  logoutError,\r\n  loginRequest,\r\n  loginSuccess,\r\n  loginError,\r\n  getCurrentUserRequest,\r\n  getCurrentUserSuccess,\r\n  getCurrentUserError,\r\n};","import { combineReducers } from \"redux\";\r\nimport { createReducer } from \"@reduxjs/toolkit\";\r\nimport authActions from \"./auth-actions\";\r\n\r\nconst initialUserState = { name: null, email: null };\r\n\r\nconst user = createReducer(initialUserState, {\r\n  [authActions.registerSuccess]: (_, { payload }) => payload.user,\r\n  [authActions.loginSuccess]: (_, { payload }) => payload.user,\r\n  [authActions.logoutSuccess]: () => initialUserState,\r\n  [authActions.getCurrentUserSuccess]: (_, { payload }) => payload,\r\n});\r\n\r\nconst token = createReducer(null, {\r\n  [authActions.registerSuccess]: (_, { payload }) => payload.token,\r\n  [authActions.loginSuccess]: (_, { payload }) => payload.token,\r\n  [authActions.logoutSuccess]: () => null,\r\n});\r\n\r\nconst setError = (_, { payload }) => payload;\r\n\r\nconst error = createReducer(null, {\r\n  [authActions.registerError]: setError,\r\n  [authActions.loginError]: setError,\r\n  [authActions.logoutError]: setError,\r\n  [authActions.getCurrentUserError]: setError,\r\n});\r\n\r\nconst isAuthenticated = createReducer(false, {\r\n  [authActions.registerSuccess]: () => true,\r\n  [authActions.loginSuccess]: () => true,\r\n  [authActions.getCurrentUserSuccess]: () => true,\r\n  [authActions.registerError]: () => false,\r\n  [authActions.loginError]: () => false,\r\n  [authActions.getCurrentUserError]: () => false,\r\n  [authActions.logoutSuccess]: () => false,\r\n});\r\n\r\nexport default combineReducers({\r\n  user,\r\n  token,\r\n  isAuthenticated,\r\n  error,\r\n});\r\n","import axios from \"axios\";\r\nimport authActions from \"./auth-actions\";\r\n\r\n// axios.defaults.baseURL = 'https://lpj-tasker.herokuapp.com';\r\naxios.defaults.baseURL = \"https://connections-api.herokuapp.com\";\r\n// url бэкендa\r\n\r\nconst token = {\r\n  set(token) {\r\n    axios.defaults.headers.common.Authorization = `Bearer ${token}`;\r\n  },\r\n  unset() {\r\n    axios.defaults.headers.common.Authorization = \"\";\r\n  },\r\n};\r\n\r\n/*\r\n * POST @ /users/signup\r\n * body { name, email, password } это credentials\r\n *\r\n * После успешной регистрации добавляем токен в HTTP-заголовок\r\n */\r\nconst register = (credentials) => async (dispatch) => {\r\n  dispatch(authActions.registerRequest());\r\n\r\n  try {\r\n    const response = await axios.post(\"/users/signup\", credentials);\r\n\r\n    token.set(response.data.token);\r\n    dispatch(authActions.registerSuccess(response.data));\r\n  } catch (error) {\r\n    dispatch(authActions.registerError(error.message));\r\n  }\r\n};\r\n\r\n/*\r\n * POST @ /users/login\r\n * body:\r\n *    { email, password }\r\n *\r\n * После успешного логина добавляем токен в HTTP-заголовок\r\n */\r\nconst logIn = (credentials) => async (dispatch) => {\r\n  dispatch(authActions.loginRequest());\r\n\r\n  try {\r\n    const response = await axios.post(\"/users/login\", credentials);\r\n\r\n    token.set(response.data.token);\r\n    dispatch(authActions.loginSuccess(response.data));\r\n  } catch (error) {\r\n    dispatch(authActions.loginError(error.message));\r\n  }\r\n};\r\n\r\n/*\r\n * POST @ /users/logout\r\n * headers:\r\n *    Authorization: Bearer token\r\n *\r\n * 1. После успешного логаута, удаляем токен из HTTP-заголовка\r\n */\r\nconst logOut = () => async (dispatch) => {\r\n  dispatch(authActions.logoutRequest());\r\n\r\n  try {\r\n    await axios.post(\"/users/logout\");\r\n\r\n    // token.unset();\r\n    dispatch(authActions.logoutSuccess());\r\n  } catch (error) {\r\n    dispatch(authActions.logoutError(error.message));\r\n  }\r\n};\r\n\r\n/*\r\n * GET @ /users/current\r\n * headers:\r\n *    Authorization: Bearer token\r\n *\r\n * 1. Забираем токен из стейта через getState()\r\n * 2. Если токена нет, выходим не выполняя никаких операций\r\n * 3. Если токен есть, добавляет его в HTTP-заголовок и выполянем операцию\r\n */\r\nconst getCurrentUser = () => async (dispatch, getState) => {\r\n  const {\r\n    auth: { token: persistedToken },\r\n  } = getState();\r\n\r\n  if (!persistedToken) {\r\n    return;\r\n  }\r\n\r\n  token.set(persistedToken);\r\n  dispatch(authActions.getCurrentUserRequest());\r\n\r\n  try {\r\n    const response = await axios.get(\"/users/current\");\r\n\r\n    dispatch(authActions.getCurrentUserSuccess(response.data));\r\n  } catch (error) {\r\n    dispatch(authActions.getCurrentUserError(error.message));\r\n  }\r\n};\r\n\r\n// eslint-disable-next-line\r\nexport default { register, logOut, logIn, getCurrentUser };\r\n","import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport authSelectors from \"../../redux/auth/auth-selectors\";\r\nimport { useSelector } from \"react-redux\";\r\nimport styles from \"./UserMenu.module.css\";\r\n\r\n// const mapStateToProps = (state) => ({\r\n//   isLoggedIn: authSelectors.getIsAuthenticated(state),\r\n// });\r\n\r\nexport default function Navigation() {\r\n  const isLoggedIn = useSelector(authSelectors.getIsAuthenticated);\r\n  return (\r\n    <>\r\n      <nav>\r\n        <NavLink to=\"/\" exact className={styles.navlink}>\r\n          Home\r\n        </NavLink>\r\n\r\n        {isLoggedIn && (\r\n          <NavLink to=\"/contacts\" exact className={styles.navlink}>\r\n            Phonebook\r\n          </NavLink>\r\n        )}\r\n      </nav>\r\n    </>\r\n  );\r\n}\r\n","import React, { useCallback } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { authSelectors, authOperations } from \"../../redux/auth\";\r\nimport styles from \"./UserMenu.module.css\";\r\n\r\n// const mapDispatchToProps = {\r\n//   onLogout: authOperations.logOut,\r\n// };\r\n\r\nexport default function UserMenu() {\r\n  const name = useSelector(authSelectors.getUsername);\r\n\r\n  const dispatch = useDispatch();\r\n  const onLogout = useCallback(() => dispatch(authOperations.logOut()), [\r\n    dispatch,\r\n  ]);\r\n\r\n  return (\r\n    <div className={styles.userMenuBlock}>\r\n      <span className={styles.welcomeText}>Welcome, {name}.</span>\r\n      <button className={styles.buttonLogOut} type=\"button\" onClick={onLogout}>\r\n        Logout\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport styles from \"./UserMenu.module.css\";\r\n\r\nconst AuthNav = () => (\r\n  <div>\r\n    <NavLink to=\"/register\" exact className={styles.navlink}>\r\n      Sign up\r\n    </NavLink>\r\n    <NavLink to=\"/login\" exact className={styles.navlink}>\r\n      Log in\r\n    </NavLink>\r\n  </div>\r\n);\r\n\r\nexport default AuthNav;\r\n","import React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport Navigation from \"./Navigation\";\r\nimport UserMenu from \"./UserMenu\";\r\nimport AuthNav from \"./AuthNav\";\r\nimport authSelectors from \"../../redux/auth/auth-selectors\";\r\nimport styles from \"./UserMenu.module.css\";\r\n\r\n// const mapStateToProps = (state) => ({\r\n//   isAuthenticated: authSelectors.getIsAuthenticated(state),\r\n// });\r\n\r\nexport default function AppBar() {\r\n  const isLoggedIn = useSelector(authSelectors.getIsAuthenticated);\r\n  return (\r\n    <header className={styles.AppBarHeader}>\r\n      <Navigation />\r\n      {isLoggedIn ? <UserMenu /> : <AuthNav />}\r\n    </header>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { authSelectors } from \"../redux/auth\";\r\n\r\n/**\r\n * - Если маршрут приватный и пользователь залогинен, рендерит компонент\r\n * - В противном случае рендерит Redirect на /login\r\n */\r\n\r\nexport default function PrivateRoute({\r\n  children,\r\n  isAuthenticated,\r\n  redirectTo,\r\n  ...routeProps\r\n}) {\r\n  const isLoggedIn = useSelector(authSelectors.getIsAuthenticated);\r\n\r\n  return (\r\n    <Route {...routeProps}>\r\n      {isLoggedIn ? children : <Redirect to={redirectTo} />}\r\n    </Route>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { authSelectors } from \"../redux/auth\";\r\n\r\n/**\r\n * - Если маршрут ограниченный, и пользователь залогинен, рендерит редирект на /todos\r\n * - В противном случае рендерит компонент\r\n */\r\nexport default function PublicRoute({\r\n  component: Component,\r\n  isAuthenticated,\r\n  redirectTo,\r\n  children,\r\n  ...routeProps\r\n}) {\r\n  const isLoggedIn = useSelector(authSelectors.getIsAuthenticated);\r\n  return (\r\n    <Route {...routeProps}>\r\n      {isLoggedIn && routeProps.restricted ? (\r\n        <Redirect to={redirectTo} />\r\n      ) : (\r\n        children\r\n      )}\r\n    </Route>\r\n  );\r\n}\r\n","import { useDispatch } from \"react-redux\";\r\nimport React, { Suspense, lazy, useEffect } from \"react\";\r\nimport { Switch } from \"react-router-dom\";\r\nimport AppBar from \"./components/UserMenu/AppBar\";\r\nimport authOperations from \"./redux/auth/auth-operations\";\r\nimport PrivateRoute from \"./components/PrivateRoute\";\r\nimport PublicRoute from \"./components/PublicRoute\";\r\n\r\nconst HomeView = lazy(() =>\r\n  import(\"./views/HomeView\" /* webpackChunkName: \"home-page\" */)\r\n);\r\nconst RegisterView = lazy(() =>\r\n  import(\"./components/RegisterForm\" /* webpackChunkName: \"home-page\" */)\r\n);\r\nconst LoginView = lazy(() =>\r\n  import(\"./components/LoginForm\" /* webpackChunkName: \"home-page\" */)\r\n);\r\nconst ContactsView = lazy(() =>\r\n  import(\"./views/ContactsView\" /* webpackChunkName: \"home-page\" */)\r\n);\r\n\r\nexport default function App() {\r\n  // замена componentDidMount\r\n  const dispatch = useDispatch();\r\n  useEffect(() => {\r\n    dispatch(authOperations.getCurrentUser());\r\n  }, [dispatch]);\r\n\r\n  return (\r\n    <>\r\n      <div>\r\n        <AppBar />\r\n        <Suspense fallback={<p>Загружаем...</p>}>\r\n          <Switch>\r\n            <PublicRoute exact path=\"/\">\r\n              <HomeView />\r\n            </PublicRoute>\r\n            <PublicRoute path=\"/register\" restricted redirectTo=\"/contacts\">\r\n              <RegisterView />\r\n            </PublicRoute>\r\n            <PublicRoute path=\"/login\" restricted redirectTo=\"/contacts\">\r\n              <LoginView />\r\n            </PublicRoute>\r\n\r\n            <PrivateRoute path=\"/contacts\" redirectTo=\"/login\">\r\n              <ContactsView />\r\n            </PrivateRoute>\r\n          </Switch>\r\n        </Suspense>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","import { combineReducers } from \"redux\";\r\nimport { createReducer } from \"@reduxjs/toolkit\";\r\nimport actions from \"./actions\";\r\n\r\nconst items = createReducer([], {\r\n  [actions.fetchContactSuccess]: (_, action) => action.payload,\r\n  [actions.addContactSuccess]: (state, action) => [...state, action.payload],\r\n  [actions.deleteContactSuccess]: (state, action) =>\r\n    state.filter((contact) => contact.id !== action.payload),\r\n});\r\n\r\nconst filter = createReducer(\"\", {\r\n  [actions.changeFilter]: (_, action) => action.payload,\r\n});\r\n\r\nexport default combineReducers({\r\n  items,\r\n  filter,\r\n});\r\n","import { configureStore, getDefaultMiddleware } from \"@reduxjs/toolkit\";\r\nimport logger from \"redux-logger\";\r\nimport {\r\n  persistStore,\r\n  persistReducer,\r\n  FLUSH,\r\n  REHYDRATE,\r\n  PAUSE,\r\n  PERSIST,\r\n  PURGE,\r\n  REGISTER,\r\n} from \"redux-persist\";\r\nimport contactReducer from \"./reducer\";\r\nimport aythReducer from \"./auth/auth-reducer\";\r\nimport storage from \"redux-persist/lib/storage\";\r\n\r\nconst middleware = [\r\n  ...getDefaultMiddleware({\r\n    serializableCheck: {\r\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n    },\r\n  }),\r\n  logger,\r\n];\r\n\r\nconst authPersistConfig = {\r\n  key: \"auth\",\r\n  storage,\r\n  whitelist: [\"token\"],\r\n};\r\n\r\nconst store = configureStore({\r\n  reducer: {\r\n    auth: persistReducer(authPersistConfig, aythReducer),\r\n    contacts: contactReducer,\r\n  },\r\n  middleware: middleware,\r\n  devTools: process.env.NODE_ENV === \"development\",\r\n});\r\nconst persistor = persistStore(store);\r\n\r\n// eslint-disable-next-line\r\nexport default { store, persistor };\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport { Provider } from 'react-redux';\r\nimport { PersistGate } from 'redux-persist/integration/react';\r\nimport App from './App';\r\nimport store from './redux/store';\r\nimport 'modern-normalize/modern-normalize.css';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store.store}>\r\n      <PersistGate loading={null} persistor={store.persistor}>\r\n        <BrowserRouter>\r\n          <App />\r\n        </BrowserRouter>\r\n      </PersistGate>\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root'),\r\n);"],"sourceRoot":""}